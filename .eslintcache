[{"C:\\Program Files\\Ampps\\www\\my-recipes\\src\\index.js":"1","C:\\Program Files\\Ampps\\www\\my-recipes\\src\\App.js":"2","C:\\Program Files\\Ampps\\www\\my-recipes\\src\\components\\Home.js":"3","C:\\Program Files\\Ampps\\www\\my-recipes\\src\\components\\Navbar.js":"4","C:\\Program Files\\Ampps\\www\\my-recipes\\src\\components\\MyRecipes.js":"5","C:\\Program Files\\Ampps\\www\\my-recipes\\src\\components\\CreateRecipe.js":"6","C:\\Program Files\\Ampps\\www\\my-recipes\\src\\components\\RecipeCard.js":"7","C:\\Program Files\\Ampps\\www\\my-recipes\\src\\components\\CreateRecipeWithUrl.js":"8","C:\\Program Files\\Ampps\\www\\my-recipes\\src\\firebase\\index.js":"9","C:\\Program Files\\Ampps\\www\\my-recipes\\src\\components\\ShowSingleRecipe.js":"10","C:\\Program Files\\Ampps\\www\\my-recipes\\src\\components\\SignUp.js":"11","C:\\Program Files\\Ampps\\www\\my-recipes\\src\\components\\NotFound.js":"12","C:\\Program Files\\Ampps\\www\\my-recipes\\src\\contexts\\AuthContext.js":"13","C:\\Program Files\\Ampps\\www\\my-recipes\\src\\components\\Login.js":"14","C:\\Program Files\\Ampps\\www\\my-recipes\\src\\components\\AuthRoute.js":"15","C:\\Program Files\\Ampps\\www\\my-recipes\\src\\components\\CreateRecipeWithFile.js":"16","C:\\Program Files\\Ampps\\www\\my-recipes\\src\\components\\Logout.js":"17","C:\\Program Files\\Ampps\\www\\my-recipes\\src\\components\\AccessDenied.js":"18","C:\\Program Files\\Ampps\\www\\my-recipes\\src\\hooks\\useRecipes.js":"19","C:\\Program Files\\Ampps\\www\\my-recipes\\src\\hooks\\useRecipe.js":"20","C:\\Program Files\\Ampps\\www\\my-recipes\\src\\hooks\\useCreateUrlRecipe.js":"21","C:\\Program Files\\Ampps\\www\\my-recipes\\src\\hooks\\useCreateFileRecipe.js":"22"},{"size":393,"mtime":1608651387015,"results":"23","hashOfConfig":"24"},{"size":1911,"mtime":1613333919277,"results":"25","hashOfConfig":"24"},{"size":1859,"mtime":1613334798317,"results":"26","hashOfConfig":"24"},{"size":1665,"mtime":1613323605071,"results":"27","hashOfConfig":"24"},{"size":632,"mtime":1613334583598,"results":"28","hashOfConfig":"24"},{"size":462,"mtime":1613319204141,"results":"29","hashOfConfig":"24"},{"size":1949,"mtime":1613334817060,"results":"30","hashOfConfig":"24"},{"size":3448,"mtime":1613317858279,"results":"31","hashOfConfig":"24"},{"size":930,"mtime":1608641817711,"results":"32","hashOfConfig":"24"},{"size":2638,"mtime":1613334789996,"results":"33","hashOfConfig":"24"},{"size":2792,"mtime":1613301051057,"results":"34","hashOfConfig":"24"},{"size":155,"mtime":1608646129203,"results":"35","hashOfConfig":"24"},{"size":1519,"mtime":1613299418842,"results":"36","hashOfConfig":"24"},{"size":2652,"mtime":1613301448021,"results":"37","hashOfConfig":"24"},{"size":331,"mtime":1613297906357,"results":"38","hashOfConfig":"24"},{"size":3767,"mtime":1613322465835,"results":"39","hashOfConfig":"24"},{"size":538,"mtime":1613299458765,"results":"40","hashOfConfig":"24"},{"size":209,"mtime":1613303158321,"results":"41","hashOfConfig":"24"},{"size":1111,"mtime":1613321697613,"results":"42","hashOfConfig":"24"},{"size":766,"mtime":1613310338209,"results":"43","hashOfConfig":"24"},{"size":2637,"mtime":1613320330987,"results":"44","hashOfConfig":"24"},{"size":3783,"mtime":1613321948139,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"j96gau",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"48"},"C:\\Program Files\\Ampps\\www\\my-recipes\\src\\index.js",[],["96","97"],"C:\\Program Files\\Ampps\\www\\my-recipes\\src\\App.js",[],"C:\\Program Files\\Ampps\\www\\my-recipes\\src\\components\\Home.js",[],"C:\\Program Files\\Ampps\\www\\my-recipes\\src\\components\\Navbar.js",[],"C:\\Program Files\\Ampps\\www\\my-recipes\\src\\components\\MyRecipes.js",[],"C:\\Program Files\\Ampps\\www\\my-recipes\\src\\components\\CreateRecipe.js",[],"C:\\Program Files\\Ampps\\www\\my-recipes\\src\\components\\RecipeCard.js",["98"],"C:\\Program Files\\Ampps\\www\\my-recipes\\src\\components\\CreateRecipeWithUrl.js",["99","100","101","102"],"import { useState } from 'react';\r\nimport { db, storage } from '../firebase';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport useCreateUrlRecipe from '../hooks/useCreateUrlRecipe';\r\n\r\nconst CreateRecipeWithUrl = () => {\r\n\r\n    const [submit, setSubmit] = useState(null);\r\n    const [vegan, setVegan] = useState(false);\r\n    const navigate = useNavigate();\r\n    const [recipe, setRecipe] = useState(null);\r\n    const [photo, setPhoto] = useState(null);\r\n    useCreateUrlRecipe(recipe, photo, vegan, submit);\r\n\r\n    const handleCheckbox = (e) => {\r\n        setVegan(false);\r\n        if(e.target.checked === true) {\r\n            setVegan(true);\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(!recipe) {\r\n            return;\r\n        }\r\n\r\n        setSubmit(true);\r\n    }\r\n\r\n    const handleInput = (e) => {\r\n        setRecipe({\r\n\t\t\t...recipe,\r\n\t\t\t[e.target.id]: e.target.value\r\n\t\t});\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        console.log('this is photo', e.target.files[0]);\r\n        const allowedPhotoTypes = ['image/jpeg', 'image/png'];\r\n        const selectedPhoto = e.target.files[0];\r\n\r\n        //if there is a photo and the type is ok, add it to state\r\n        if(selectedPhoto) {\r\n            if(allowedPhotoTypes.includes(selectedPhoto.type)) {\r\n                setPhoto(e.target.files[0])\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"\">\r\n            <form onSubmit={handleSubmit}>\r\n\r\n                <div className=\"\">\r\n                    <label htmlFor=\"name\" className=\"form-label\">Receptnamn *</label>\r\n                    <input \r\n                        type=\"text\"     \r\n                        className=\"\" \r\n                        id=\"name\" \r\n                        required\r\n                        onChange={handleInput}\r\n                    />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"url\" className=\"\">LÃ¤nk *</label>\r\n                    <input \r\n                        type=\"url\" \r\n                        className=\"\" \r\n                        id=\"url\" \r\n                        required\r\n                        onChange={handleInput}\r\n                    />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"comment\" className=\"\">Kommentar</label>\r\n                    <textarea \r\n                        name=\"comment\" \r\n                        className=\"\" \r\n                        id=\"comment\" \r\n                        onChange={handleInput}\r\n                    >\r\n                    </textarea>\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"photo\" className=\"\">Bild</label>\r\n                    <input \r\n                        type=\"file\" \r\n                        className=\"form-control\" \r\n                        id=\"photo\" \r\n                        onChange={handleFileChange}\r\n                    />\r\n                </div>\r\n\r\n                <div>\r\n                    <input type=\"checkbox\" name=\"Veganskt\" onChange={handleCheckbox}/>\r\n                    <label>Veganskt</label>\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"\">Skapa recept</button>\r\n\r\n            </form>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateRecipeWithUrl\r\n","C:\\Program Files\\Ampps\\www\\my-recipes\\src\\firebase\\index.js",[],"C:\\Program Files\\Ampps\\www\\my-recipes\\src\\components\\ShowSingleRecipe.js",[],"C:\\Program Files\\Ampps\\www\\my-recipes\\src\\components\\SignUp.js",[],"C:\\Program Files\\Ampps\\www\\my-recipes\\src\\components\\NotFound.js",[],"C:\\Program Files\\Ampps\\www\\my-recipes\\src\\contexts\\AuthContext.js",[],"C:\\Program Files\\Ampps\\www\\my-recipes\\src\\components\\Login.js",[],"C:\\Program Files\\Ampps\\www\\my-recipes\\src\\components\\AuthRoute.js",[],"C:\\Program Files\\Ampps\\www\\my-recipes\\src\\components\\CreateRecipeWithFile.js",["103","104","105","106"],"import { useState } from 'react';\r\nimport { db, storage } from '../firebase';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport useCreateFileRecipe from '../hooks/useCreateFileRecipe';\r\n\r\nconst CreateRecipeWithFile = () => {\r\n\r\n    const navigate = useNavigate();\r\n    const { currentUser } = useAuth();\r\n    const [recipe, setRecipe] = useState(null);\r\n    const [photo, setPhoto] = useState(null);\r\n    const [file, setFile] = useState(null);\r\n    const [vegan, setVegan] = useState(false);\r\n    const [submit, setSubmit] = useState(null);\r\n    useCreateFileRecipe(recipe, photo, file, vegan, submit);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(!file){\r\n            return;\r\n        }\r\n\r\n        setSubmit(true);\r\n        \r\n    }\r\n\r\n    const handleInput = (e) => {\r\n        setRecipe({\r\n\t\t\t...recipe,\r\n\t\t\t[e.target.id]: e.target.value\r\n\t\t});\r\n    }\r\n\r\n    const handleCheckbox = (e) => {\r\n        setVegan(false);\r\n        if(e.target.checked === true) {\r\n            setVegan(true);\r\n        }\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n\r\n        const allowedFileTypes = ['image/jpeg', 'image/png'];\r\n        const selectedFile = e.target.files[0];\r\n\r\n        //if there is a photo and the type is ok, add it to state\r\n        if(selectedFile) {\r\n            if(allowedFileTypes.includes(selectedFile.type)) {\r\n                setFile(e.target.files[0])\r\n            }\r\n        }\r\n    }\r\n\r\n    const handlePhotoChange = (e) => {\r\n        const allowedPhotoTypes = ['image/jpeg', 'image/png'];\r\n        const selectedPhoto = e.target.files[0];\r\n\r\n        //if there is a photo and the type is ok, add it to state\r\n        if(selectedPhoto) {\r\n            if(allowedPhotoTypes.includes(selectedPhoto.type)) {\r\n                setPhoto(e.target.files[0])\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n\r\n                <div>\r\n                    <label htmlFor=\"name\">Receptnamn *</label>\r\n                    <input \r\n                        type=\"text\"     \r\n                        id=\"name\" \r\n                        required\r\n                        onChange={handleInput}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"recipePhoto\">Ladda upp recept *</label>\r\n                    <input \r\n                        type=\"file\"  \r\n                        id=\"recipePhoto\" \r\n                        onChange={handleFileChange}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"\">\r\n                    <label htmlFor=\"comment\" className=\"\">Kommentar</label>\r\n                    <textarea \r\n                        name=\"comment\" \r\n                        className=\"\" \r\n                        id=\"comment\" \r\n                        onChange={handleInput}\r\n                    >\r\n                    </textarea>\r\n                </div>\r\n\r\n                <div className=\"\">\r\n                    <label htmlFor=\"photo\" className=\"\">Bild</label>\r\n                    <input \r\n                        type=\"file\" \r\n                        className=\"\" \r\n                        id=\"photo\" \r\n                        onChange={handlePhotoChange}\r\n                    />\r\n                </div>\r\n\r\n                <div>\r\n                    <input type=\"checkbox\" name=\"Veganskt\" onChange={handleCheckbox}/>\r\n                    <label>Veganskt</label>\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"\">Skapa recept</button>\r\n\r\n            </form>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateRecipeWithFile;\r\n","C:\\Program Files\\Ampps\\www\\my-recipes\\src\\components\\Logout.js",[],"C:\\Program Files\\Ampps\\www\\my-recipes\\src\\components\\AccessDenied.js",[],"C:\\Program Files\\Ampps\\www\\my-recipes\\src\\hooks\\useRecipes.js",[],"C:\\Program Files\\Ampps\\www\\my-recipes\\src\\hooks\\useRecipe.js",["107"],"import { useEffect, useState } from 'react';\r\nimport { db } from '../firebase';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\nconst useRecipe = (recipeId) => {\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [recipe, setRecipe] = useState([]);\r\n    const { currentUser } = useAuth();\r\n\r\n    useEffect(() => {\r\n\r\n        const unsubscribe = db.collection('recipes')\r\n            .doc(recipeId)\r\n            .onSnapshot(doc => {\r\n                setLoading(true);\r\n\r\n                console.log('recipe', doc.data());\r\n                setLoading(false);\r\n                setRecipe(doc.data());\r\n\r\n            return unsubscribe;\r\n        });\r\n\r\n    }, [recipeId]);\r\n\r\n    return { loading, setLoading, recipe };\r\n}\r\n\r\nexport default useRecipe;","C:\\Program Files\\Ampps\\www\\my-recipes\\src\\hooks\\useCreateUrlRecipe.js",["108","109","110"],"import { db, storage } from '../firebase';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst useCreateUrlRecipe = (recipe, photo, vegan, submit) => {\r\n\r\n    const [error, setError ] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const { currentUser } = useAuth();\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n\r\n        if(!recipe) {\r\n            return;\r\n        }\r\n\r\n        if(photo) {\r\n            //get root reference\r\n            const storageRef = storage.ref();\r\n\r\n            //create a reference based on the photos name\r\n            const fileRef = storageRef.child(`photos/${photo.name}`);\r\n            \r\n            //upload photo to fileRef\r\n            fileRef.put(photo)\r\n                .then(snapshot => {\r\n                    console.log('this is snapshot', snapshot);\r\n\r\n                    //retrieve url to uploaded photo\r\n                    snapshot.ref.getDownloadURL().then(url => {\r\n\r\n                        //add uploaded photo to database\r\n                        db.collection('recipes').add({\r\n                            owner: currentUser.uid,\r\n                            name: recipe.name,\r\n                            url: recipe.url,\r\n                            comment: recipe.comment,\r\n                            path: snapshot.ref.fullPath,\r\n                            photoUrl: url,\r\n                            vegan: vegan\r\n                        })\r\n                            .then(() => {\r\n                                navigate('/my-recipes/')\r\n                            })\r\n                            .catch(err => {\r\n                                console.log('something went wrong', err);\r\n                            })\r\n                        \r\n                    })\r\n                })\r\n            .catch(err => {\r\n                console.log('something went wrong', err);\r\n            })\r\n\r\n        } else {\r\n            //add uploaded recipe to database\r\n            db.collection('recipes').add({\r\n                owner: currentUser.uid,\r\n                name: recipe.name,\r\n                url: recipe.url,\r\n                comment: recipe.comment,\r\n                vegan: vegan\r\n            })\r\n                .then(() => {\r\n                    navigate('/my-recipes/')\r\n                })\r\n                .catch(err => {\r\n                    console.log('something went wrong', err);\r\n                })\r\n        }\r\n\r\n    }, [submit]);\r\n\r\n    return { error, loading };\r\n}\r\n\r\nexport default useCreateUrlRecipe;","C:\\Program Files\\Ampps\\www\\my-recipes\\src\\hooks\\useCreateFileRecipe.js",["111","112","113"],"import { db, storage } from '../firebase';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst useCreateFileRecipe = (recipe, photo, file, vegan, submit) => {\r\n\r\n    const [error, setError ] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const { currentUser } = useAuth();\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n\r\n        if(!recipe) {\r\n            return;\r\n        }\r\n\r\n        //get root reference\r\n        const storageRef = storage.ref();\r\n\r\n        //create a reference based on the files name\r\n        const fileRef = storageRef.child(`files/${file.name}`);\r\n\r\n        //upload file to fileRef\r\n        fileRef.put(file)\r\n            .then(snapshot => {\r\n\r\n                //retrieve url to uploaded file\r\n                snapshot.ref.getDownloadURL().then(url => {\r\n\r\n                    const fileUrl = url;\r\n\r\n                    if(photo) {\r\n                        //create a reference based on the photos name\r\n                        const photoRef = storageRef.child(`photos/${photo.name}`);\r\n\r\n                        //upload file to fileRef\r\n                        photoRef.put(photo)\r\n                            .then(snapshot => {\r\n                                //retrieve url to uploaded photo\r\n                                snapshot.ref.getDownloadURL().then(url => {\r\n                                    console.log('this is fileUrl', fileUrl);\r\n\r\n                                //add uploaded photo to database\r\n                                db.collection('recipes').add({\r\n                                    owner: currentUser.uid,\r\n                                    name: recipe.name,\r\n                                    comment: recipe.comment,\r\n                                    path: snapshot.ref.fullPath,\r\n                                    photoUrl: url, \r\n                                    recipeUrl: fileUrl,\r\n                                    vegan\r\n                                })\r\n                                    .then(() => {\r\n                                        navigate('/my-recipes/')\r\n                                    })\r\n                                    .catch(err => {\r\n                                        console.log('something went wrong', err);\r\n                                    })\r\n\r\n                                })\r\n                            })\r\n                            .catch(err => {\r\n                                console.log('problem uploading photo', err);\r\n                            })\r\n                    } else {\r\n                        //add uploaded recipe to database\r\n                        db.collection('recipes').add({\r\n                            owner: currentUser.uid,\r\n                            name: recipe.name,\r\n                            comment: recipe.comment,\r\n                            path: snapshot.ref.fullPath,\r\n                            recipeUrl: fileUrl,\r\n                            vegan\r\n                        })\r\n                            .then(() => {\r\n                                navigate('/my-recipes/')\r\n                            })\r\n                            .catch(err => {\r\n                                console.log('something went wrong', err);\r\n                            })\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log('something went wrong', err);\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log('something went wrong', err);\r\n            })\r\n\r\n    }, [submit]);\r\n\r\n    return { error, loading };\r\n}\r\n\r\nexport default useCreateFileRecipe;",{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":36,"column":1,"nodeType":"120","messageId":"121","endLine":60,"endColumn":20},{"ruleId":"122","severity":1,"message":"123","line":2,"column":10,"nodeType":"124","messageId":"125","endLine":2,"endColumn":12},{"ruleId":"122","severity":1,"message":"126","line":2,"column":14,"nodeType":"124","messageId":"125","endLine":2,"endColumn":21},{"ruleId":"122","severity":1,"message":"127","line":4,"column":10,"nodeType":"124","messageId":"125","endLine":4,"endColumn":17},{"ruleId":"122","severity":1,"message":"128","line":11,"column":11,"nodeType":"124","messageId":"125","endLine":11,"endColumn":19},{"ruleId":"122","severity":1,"message":"123","line":2,"column":10,"nodeType":"124","messageId":"125","endLine":2,"endColumn":12},{"ruleId":"122","severity":1,"message":"126","line":2,"column":14,"nodeType":"124","messageId":"125","endLine":2,"endColumn":21},{"ruleId":"122","severity":1,"message":"128","line":9,"column":11,"nodeType":"124","messageId":"125","endLine":9,"endColumn":19},{"ruleId":"122","severity":1,"message":"129","line":10,"column":13,"nodeType":"124","messageId":"125","endLine":10,"endColumn":24},{"ruleId":"122","severity":1,"message":"129","line":9,"column":13,"nodeType":"124","messageId":"125","endLine":9,"endColumn":24},{"ruleId":"122","severity":1,"message":"130","line":8,"column":19,"nodeType":"124","messageId":"125","endLine":8,"endColumn":27},{"ruleId":"122","severity":1,"message":"131","line":9,"column":21,"nodeType":"124","messageId":"125","endLine":9,"endColumn":31},{"ruleId":"132","severity":1,"message":"133","line":74,"column":8,"nodeType":"134","endLine":74,"endColumn":16,"suggestions":"135"},{"ruleId":"122","severity":1,"message":"130","line":8,"column":19,"nodeType":"124","messageId":"125","endLine":8,"endColumn":27},{"ruleId":"122","severity":1,"message":"131","line":9,"column":21,"nodeType":"124","messageId":"125","endLine":9,"endColumn":31},{"ruleId":"132","severity":1,"message":"136","line":93,"column":8,"nodeType":"134","endLine":93,"endColumn":16,"suggestions":"137"},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-unused-vars","'db' is defined but never used.","Identifier","unusedVar","'storage' is defined but never used.","'useAuth' is defined but never used.","'navigate' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'setError' is assigned a value but never used.","'setLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentUser.uid', 'navigate', 'photo', 'recipe', and 'vegan'. Either include them or remove the dependency array.","ArrayExpression",["140"],"React Hook useEffect has missing dependencies: 'currentUser.uid', 'file', 'navigate', 'photo', 'recipe', and 'vegan'. Either include them or remove the dependency array.",["141"],"no-global-assign","no-unsafe-negation",{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},"Update the dependencies array to be: [currentUser.uid, navigate, photo, recipe, submit, vegan]",{"range":"146","text":"147"},"Update the dependencies array to be: [currentUser.uid, file, navigate, photo, recipe, submit, vegan]",{"range":"148","text":"149"},[2552,2560],"[currentUser.uid, navigate, photo, recipe, submit, vegan]",[3697,3705],"[currentUser.uid, file, navigate, photo, recipe, submit, vegan]"]